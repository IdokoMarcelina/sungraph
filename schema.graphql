
type User @entity {
  id: ID! # User address
  stakedAmount: BigInt!
  pendingRewards: BigInt!
  lastStakeTimestamp: BigInt!
  stakes: [StakePosition!]! @derivedFrom(field: "user")
  withdrawals: [Withdrawn!]! @derivedFrom(field: "user")
  emergencyWithdrawals: [EmergencyWithdrawn!]! @derivedFrom(field: "user")
  rewardsClaimed: [RewardsClaimed!]! @derivedFrom(field: "user")
}

type Protocol @entity {
  id: ID! # Constant ID like "1"
  totalStaked: BigInt!
  currentRewardRate: BigInt!
  totalRewardsDistributed: BigInt!
  minLockDuration: BigInt!
}

type StakePosition @entity(immutable: true) {
  id: ID! # Transaction hash
  user: User!
  amount: BigInt!
  timestamp: BigInt!
  unlockTime: BigInt!
  totalStaked: BigInt! # Snapshot of totalStaked at the time of staking
  currentRewardRate: BigInt! # Snapshot of currentRewardRate at the time of staking
  transactionHash: Bytes!
  status: String! # "Active" or "Withdrawn"
  blockNumber: BigInt!
  blockTimestamp: BigInt!
}

type Staked @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt! # uint256
  timestamp: BigInt! # uint256
  newTotalStaked: BigInt! # uint256
  currentRewardRate: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdrawn @entity(immutable: true) {
  id: Bytes!
  user: User! # address
  amount: BigInt! # uint256
  timestamp: BigInt! # uint256
  newTotalStaked: BigInt! # uint256
  currentRewardRate: BigInt! # uint256
  rewardsAccrued: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EmergencyWithdrawn @entity(immutable: true) {
  id: Bytes!
  user: User! # address
  amount: BigInt! # uint256
  penalty: BigInt! # uint256
  timestamp: BigInt! # uint256
  newTotalStaked: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RewardsClaimed @entity(immutable: true) {
  id: Bytes!
  user: User! # address
  amount: BigInt! # uint256
  timestamp: BigInt! # uint256
  newPendingRewards: BigInt! # uint256
  totalStaked: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}


